resource "catalog-item-type" "simpleinputs" {
  code = "simpleinputs"
  name = "Simple Inputs"
  uuid = "0182e784-b572-420b-a898-453720de18b2"
  category = "simple"
  config = {
    name = "$${userInitials}-simpleinputs-$${sequence}"
    backup = {
      createBackup = true
      jobAction = "new"
      jobRetentionCount = "3"
      jobSchedule = 2
      providerBackupType = 42
      target = 194
      veeamManagedServer = ""
    }
    cloud = { name = "QA Docker", id = 5 }
    config = {
      createUser = true
      isEC2 = false
      isVpcSelectable = true
      poolProviderType = null
      provisionServerId = null
      resourcePoolId = "pool-223"
    }
    defaultExpandAdvanced = false
    environment = "2"
    group = { name = "QA Docker", id = "6" }
    hideLock = true
    hostName = "simpleinputs"
    layout = { code = "524f1d9f-959b-4ad9-983e-802311c2bbff", id = 1332 }
    loadBalancer = [
      {
        name = "simpleinputs"
        balanceMode = "leastconnections"
        externalAddressCheck = false
        externalPort = 80
        id = ""
        internalPort = 80
        loadBalancePort = null
        loadBalanceProtocol = "http"
        protocol = "https"
        vipHostname = "simpleinputs.localdomain"
        vipName = "simpleinputs-load-balancer"
        vipPort = 80
      },
      {
        name = "simpleinputs"
        balanceMode = "leastconnections"
        externalAddressCheck = false
        externalPort = 443
        id = ""
        internalPort = 443
        loadBalancePort = null
        loadBalanceProtocol = "https"
        protocol = "https"
        vipHostname = "simpleinputs.localdomain"
        vipName = "simpleinputs-load-balancer"
        vipPort = 443
      }
    ]
    plan = { code = "container-128", id = 101 }
    ports = [
      {
        code = null
        name = "Http"
        externalPort = 80
        id = 327
        internalPort = 80
        loadBalance = true
        loadBalancePort = null
        loadBalanceProtocol = "HTTP"
        shortName = null
        sortOrder = 0
        visible = true
      },
      {
        code = null
        name = "Https"
        externalPort = 443
        id = 328
        internalPort = 443
        loadBalance = true
        loadBalancePort = null
        loadBalanceProtocol = "HTTPS"
        shortName = null
        sortOrder = 0
        visible = true
      }
    ]
    showScale = false
    type = "nginxweb"
    version = "latest"
    volumes = [
      {
        name = "data"
        customMaxStorage = false
        hasDatastore = false
        index = 0
        maxStorage = 1073741824
        readonlyName = false
        rootVolume = true
        size = 1
        volumeCustomizable = false
      }
    ]
  }
  darkIconPath = "https://feature.morpheusdata.com/storage/logos/uploads/InstanceType/99/logo/nginx_original.svg"
  dateCreated = "2023-12-18T04:49:12.000Z"
  description = "don't delete"
  formType = "optionTypes"
  iconPath = "https://feature.morpheusdata.com/storage/logos/uploads/InstanceType/99/logo/nginx_original.svg"
  labels = [ "auto", "keep", "simple" ]
  lastUpdated = "2024-08-16T14:08:04.000Z"
  optionTypes = [
    { code = "autocheck1" },
    { code = "autohidden1" },
    { code = "autonum1" },
    { code = "autopass1" },
    { code = "autoradio1" },
    { code = "autoselect1" },
    { code = "autotext1" },
    { code = "autotextarea1" },
    { code = "autotypeahead1" },
    { code = "automulti1" },
    { code = "autocheck2" },
    { code = "autohidden2" },
    { code = "autonum2" },
    { code = "autopass2" },
    { code = "autoradio2" },
    { code = "autoselect2" },
    { code = "autotext2" },
    { code = "autotextarea2" },
    { code = "autotypeahead2" },
    { code = "automulti2" },
    { code = "autorest1" },
    { code = "autorest2" },
    { code = "aduser" },
    { code = "adlist" },
    { code = "morphgroup" },
    { code = "morphenv" },
    { code = "hidecheck" },
    { code = "hideselect" },
    { code = "hidetext" },
    { code = "hidetextarea" },
    { code = "autohidegroup" }
  ]
  refType = "InstanceType"
}